import 'package:flutter/material.dart';
import 'package:pint/api/AvaliacoesAPI.dart';
import 'package:pint/models/avaliacao.dart';
import 'package:pint/utils/evento_functions.dart';
import 'package:pint/utils/fetch_functions.dart';

class ComentariosList extends StatefulWidget {
  final List<Avaliacao> comentariosPrincipais;

  ComentariosList({required this.comentariosPrincipais});

  @override
  _ComentariosListState createState() => _ComentariosListState();
}

class _ComentariosListState extends State<ComentariosList> {
  List<Avaliacao> respostas = [];

  @override
  Widget build(BuildContext context) {
    return ListView.builder(
      itemCount: widget.comentariosPrincipais.length,
      physics: const NeverScrollableScrollPhysics(),
      shrinkWrap: true,
      itemBuilder: (context, index) {
        final comentario = widget.comentariosPrincipais[index];
        return _buildComentario(comentario);
      },
    );
  }

  Widget _buildComentario(Avaliacao comentario) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        ListTile(
          leading: buildUserAvatar(comentario.fotoUtilizador, comentario.idGoogle, width: 30, height: 30),
          title: Text(comentario.nomeUtilizador),
          subtitle: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text(comentario.comentario ?? ''),
              SizedBox(height: 2),
              Text(formatDataPublicacao(comentario.data),
                  style: TextStyle(fontSize: 12, color: Colors.grey)),
            ],
          ),
          trailing: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Row(
                mainAxisSize: MainAxisSize.min,
                children: [
                  Icon(Icons.thumb_up, color: Colors.grey, size: 20),
                  SizedBox(width: 4),
                  Text('${comentario.upvotes ?? 0}'),
                ],
              ),
              const SizedBox(height: 7,),
              Row(
                mainAxisSize: MainAxisSize.min,
                children: [
                  Icon(Icons.thumb_down, color: Colors.grey, size: 20),
                  SizedBox(width: 4),
                  Text('${comentario.downvotes ?? 0}'),
                ],
              ),
            ],
          ),
          onTap: () {
            // Carrega as respostas do comentário
            _carregarRespostas(comentario);
          },
        ),
        // Verifica se há respostas para este comentário
        if (respostas.isNotEmpty)
          Padding(
            padding: const EdgeInsets.only(left: 16.0),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  'Respostas:',
                  style: TextStyle(fontWeight: FontWeight.bold),
                ),
                SizedBox(height: 8),
                ListView.builder(
                  itemCount: respostas.length,
                  physics: NeverScrollableScrollPhysics(),
                  shrinkWrap: true,
                  itemBuilder: (context, index) {
                    return _buildComentario(respostas[index]);
                  },
                ),
              ],
            ),
          ),
        const Divider(),
      ],
    );
  }

  Future<void> _carregarRespostas(Avaliacao comentarioPai) async {
    setState(() {
      respostas = [];
    });
    final fetchedRespostas = await fetchRespostasComentario(context, comentarioPai.id);
    setState(() {
      respostas = fetchedRespostas;
    });
  }
}
